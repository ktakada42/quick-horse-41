services:
  nginx:
    container_name: nginx
    image: nginx:1.25
    volumes:
      - ./nginx/default.conf:/etc/nginx/conf.d/default.conf
      - ./nginx/html:/usr/share/nginx/html
      - /etc/letsencrypt:/etc/letsencrypt
      - /var/www/html:/var/www/html
    ports:
      - 80:80
      - 443:443
    depends_on:
      - backend
      - frontend
  certbot:
    container_name: certbot
    image: certbot/certbot:v2.7.4
    volumes:
      - /etc/letsencrypt:/etc/letsencrypt
      - /var/www/html:/var/www/html
    command: [ "--version" ]
  frontend:
    container_name: frontend
    build:
      context: ./frontend
  backend:
    container_name: backend
    build:
      context: ./backend
      target: runner
    ports:
      - 8000:8000
    depends_on:
      mysql:
        condition: service_healthy
    environment:
      SECRET_KEY: ${SECRET_KEY}
      MYSQL_DATABASE: ${MYSQL_DATABASE}
      MYSQL_USER: ${MYSQL_USER}
      MYSQL_PASSWORD: ${MYSQL_PASSWORD}
  mysql:
    container_name: mysql
    image: mysql:8.0
    ports:
      - 3306:3306
    environment:
      MYSQL_ALLOW_EMPTY_PASSWORD: ${MYSQL_ALLOW_EMPTY_PASSWORD}
      MYSQL_DATABASE: ${MYSQL_DATABASE}
      MYSQL_USER: ${MYSQL_USER}
      MYSQL_PASSWORD: ${MYSQL_PASSWORD}
    volumes:
      - ./mysql/mysql_init:/docker-entrypoint-initdb.d
      - ./mysql/my.cnf:/etc/my.cnf
      - ./volume/mysql:/var/lib/mysql
    healthcheck:
      test: [ "CMD", "mysqladmin", "ping", "-h", "localhost" ]
  redoc:
    container_name: redoc
    image: redocly/redoc:v2.1.3
    ports:
      - 8081:80
    environment:
      SPEC_URL: "swagger/openapi.yaml"
    volumes:
      - ./docs:/usr/share/nginx/html/swagger/
